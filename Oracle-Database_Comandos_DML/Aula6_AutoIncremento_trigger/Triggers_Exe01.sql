--Temos aqui o orçamento por funcionário alocado à CADA departamento. 
--Exemplo: no departamento D0001, o orçamento disponível é de 28.550,00 por funcionário alocado.
--Queremos criar TRIGGERS para que estes dados, que será salvo em uma tabela 
--com os campos DEPARTAMENTO e VALOR, sejam sempre atualizados.

SELECT * FROM TINA_TB_DEPARTAMENTO

SELECT * FROM TINA_TB_PROJETO

SELECT * FROM TINA_TB_FUNCIONARIO

--CONSULTA A QUANTIDADE DE FUNCIONÁRIOS POR DEPARTAMENTO
SELECT TD.COD_DEPARTAMENTO, 
COUNT(*) AS NUM_FUNCIONARIOS 
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN TINA_TB_FUNCIONARIO TF
ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
GROUP BY TD.COD_DEPARTAMENTO;

--CONSULTAR O VALOR TOTAL DE ORÇAMENTO DOS PROJETOS POR DEPARTAMENTO
SELECT TP.COD_DEPARTAMENTO, 
SUM(TP.ORCAMENTO_PROJETO) AS SOMA
FROM TINA_TB_PROJETO TP
GROUP BY TP.COD_DEPARTAMENTO;

 SELECT TD.COD_DEPARTAMENTO, 
 SUM(TP.ORCAMENTO_PROJETO) AS ORCAMENTO 
 FROM  TINA_TB_DEPARTAMENTO TD
 INNER JOIN TINA_TB_PROJETO TP
 ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
 GROUP BY TD.COD_DEPARTAMENTO;

-- jUNTA A CONSULTA DO FUNC POR DEPTO COM O ORÇAMENTO DE PROJ POR DEPTO
SELECT TD.COD_DEPARTAMENTO, 
COUNT(*) AS NUM_FUNCIONARIO, TP.SOMA
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN TINA_TB_FUNCIONARIO TF
ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
INNER JOIN
(SELECT P.COD_DEPARTAMENTO, 
SUM(P.ORCAMENTO_PROJETO) AS SOMA
FROM TINA_TB_PROJETO P
GROUP BY P.COD_DEPARTAMENTO) TP
ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
GROUP BY TD.COD_DEPARTAMENTO, TP.SOMA;

--Como o indicador é o valor total do orçamento dividido pelo número de funcionários, teremos:
SELECT 
TD.NOME_DEPARTAMENTO AS DEPARTAMENTO, 
TP.SOMA AS VALOR, 
COUNT(*) AS NUM_FUNC, 
ROUND(TP.SOMA/COUNT(*),2) AS TOTAL 
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN
TINA_TB_FUNCIONARIO TF
ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
INNER JOIN
(SELECT P.COD_DEPARTAMENTO, SUM(P.ORCAMENTO_PROJETO) AS SOMA
FROM TINA_TB_PROJETO P
GROUP BY P.COD_DEPARTAMENTO) TP
ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
GROUP BY TD.NOME_DEPARTAMENTO, TP.SOMA;

--Com a consulta pronta, podemos criar a tabela:
CREATE TABLE TINA_TB_FUNCIONARIO_ORCAMENTO
(DEPARTAMENTO VARCHAR(100), 
VALOR FLOAT);

DROP TABLE TAB_FUNCIONARIO_ORCAMENTO


--COMANDOS PARA A TRIGGER DO FUNCIONÁRIO

CREATE OR REPLACE TRIGGER TINA_TG_ATUALIZA_FUNC_ORC
AFTER INSERT OR UPDATE OR DELETE ON TINA_TB_FUNCIONARIO
BEGIN
DELETE FROM TINA_TB_FUNCIONARIO_ORCAMENTO;
INSERT INTO TINA_TB_FUNCIONARIO_ORCAMENTO
SELECT TD.NOME_DEPARTAMENTO AS DEPARTAMENTO, 
ROUND(TP.SOMA/COUNT(*),2) AS TOTAL 
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN
TINA_TB_FUNCIONARIO TF
ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
INNER JOIN
(SELECT P.COD_DEPARTAMENTO, SUM(P.ORCAMENTO_PROJETO) AS SOMA
FROM TINA_TB_PROJETO P
GROUP BY P.COD_DEPARTAMENTO) TP
ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
GROUP BY TD.NOME_DEPARTAMENTO, TP.SOMA;
END;

--COMMANDOS PARA A TRIGGER DO PROJETO
CREATE OR REPLACE TRIGGER TINA_TB_FUNCIONARIO_ORCAMENTO
AFTER INSERT OR UPDATE OR DELETE ON TINA_TB_PROJETO
BEGIN
DELETE FROM TINA_TB_FUNCIONARIO_ORCAMENTO;
INSERT INTO TINA_TB_FUNCIONARIO_ORCAMENTO
SELECT TD.NOME_DEPARTAMENTO AS DEPARTAMENTO, 
       ROUND(TP.SOMA/COUNT(*),2) AS TOTAL 
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN TINA_TB_FUNCIONARIO TF
      ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
INNER JOIN
      (SELECT P.COD_DEPARTAMENTO, SUM(P.ORCAMENTO_PROJETO) AS SOMA
      FROM TINA_TB_PROJETO P
      GROUP BY P.COD_DEPARTAMENTO) TP
ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
GROUP BY TD.NOME_DEPARTAMENTO, TP.SOMA;
END;


--COMMANDOS PARA A TRIGGER DO DEPARTAMENTO
CREATE OR REPLACE TRIGGER TINA_TG_ATUALIZA_DEPTO_FUNC
AFTER INSERT OR UPDATE OR DELETE ON TINA_TB_DEPARTAMENTO
BEGIN
DELETE FROM TINA_TB_FUNCIONARIO_ORCAMENTO;
INSERT INTO TINA_TB_FUNCIONARIO_ORCAMENTO
SELECT 
       TD.NOME_DEPARTAMENTO AS DEPARTAMENTO, 
       ROUND(TP.SOMA/COUNT(*),2) AS TOTAL 
FROM TINA_TB_DEPARTAMENTO TD
INNER JOIN TINA_TB_FUNCIONARIO TF
      ON TD.COD_DEPARTAMENTO = TF.COD_DEPARTAMENTO
INNER JOIN
      (SELECT P.COD_DEPARTAMENTO, SUM(P.ORCAMENTO_PROJETO) AS SOMA
      FROM TINA_TB_PROJETO P
      GROUP BY P.COD_DEPARTAMENTO) TP
ON TD.COD_DEPARTAMENTO = TP.COD_DEPARTAMENTO
GROUP BY TD.NOME_DEPARTAMENTO, TP.SOMA;
END;

---ATUALIZA TABELA DE FUNCIONÁRIO --TRIGGER 
SELECT * FROM TINA_TB_FUNCIONARIO

INSERT INTO TINA_TB_FUNCIONARIO (COD_FUNCIONARIO, NOME_FUNCIONARIO, DATA_ADMISSAO, COD_DEPARTAMENTO)
VALUES ('F0045','FUNCIONARIO F0045',TO_DATE('2022-01-01', 'yyyy-mm-dd'),'D0006');

INSERT INTO TINA_TB_FUNCIONARIO (COD_FUNCIONARIO, NOME_FUNCIONARIO, DATA_ADMISSAO, COD_DEPARTAMENTO)
VALUES ('F0037','FUNCIONARIO F0037',TO_DATE('2022-01-01', 'yyyy-mm-dd'),'D0006');
INSERT INTO TINA_TB_FUNCIONARIO (COD_FUNCIONARIO, NOME_FUNCIONARIO, DATA_ADMISSAO, COD_DEPARTAMENTO)
VALUES ('F0038','FUNCIONARIO F0038',TO_DATE('2022-01-01', 'yyyy-mm-dd'),'D0006');
INSERT INTO TINA_TB_FUNCIONARIO (COD_FUNCIONARIO, NOME_FUNCIONARIO, DATA_ADMISSAO, COD_DEPARTAMENTO)
VALUES ('F0039','FUNCIONARIO F0039',TO_DATE('2022-01-01', 'yyyy-mm-dd'),'D0006');


------------TESTE TRIGGER DEPARTAMENTO
SELECT * FROM TINA_TB_DEPARTAMENTO

INSERT INTO TINA_TB_DEPARTAMENTO (COD_DEPARTAMENTO,NOME_DEPARTAMENTO,CIDADE,COD_EMPRESA)
VALUES ('D0006','DEPARTAMENTO D0006','SAO PAULO','E0001')

SELECT * FROM TAB_DEP_PROJ_FATURAMENTO;
--------------------------------
SELECT * FROM TINA_TB_PROJETO

INSERT INTO TINA_TB_PROJETO (COD_PROJETO,NOME_PROJETO,ORCAMENTO_PROJETO,DATA_INICIO_PROJETO,COD_DEPARTAMENTO)
VALUES ('D0006','DEPARTAMENTO D0006','SAO PAULO','E0001')

SELECT * FROM TINA_TB_FUNCIONARIO_ORCAMENTO
